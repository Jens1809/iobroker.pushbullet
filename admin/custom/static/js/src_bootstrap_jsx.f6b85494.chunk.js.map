{"version":3,"file":"static/js/src_bootstrap_jsx.f6b85494.chunk.js","mappings":"sWAsBA,MAAMA,EAASC,IAAU,CACrB,MAAO,CACH,SAAU,GACd,EACA,OAAQ,CACJ,SAAU,GACV,WAAY,MAChB,EACA,SAAU,CACN,gBAAiBA,EAAM,QAAQ,OAAS,OAAS,UAAY,SACjE,CACJ,GAEA,MAAMC,UAA4B,eAAc,CAC5C,YAAYC,EAAO,CACf,MAAMA,CAAK,EACX,KAAK,MAAQ,CACT,QAAS,CAAC,CACd,CACJ,CAEA,mBAAoB,CAChB,MAAM,kBAAkB,EACpB,KAAK,MAAM,KAAK,QAChB,KAAK,SAAS,CAEtB,CAEA,UAAW,CACP,MAAM,wCAAyC,CAC3C,QAAS,CACL,cAAe,UAAU,KAAK,MAAM,KAAK,QAC7C,CACJ,CAAC,EACI,KAAKC,GAAOA,EAAI,KAAK,CAAC,EACtB,KAAKC,GAAQ,CACNA,EAAK,MACL,OAAO,MAAM,wBAAwBA,EAAK,MAAM,SAAS,EAEzD,KAAK,SAAS,CAAE,QAASA,EAAK,SAAW,CAAC,CAAE,CAAC,CAErD,CAAC,EACA,MAAM,GAAK,OAAO,MAAM,wBAAwB,GAAG,CAAC,CAC7D,CAEA,YAAa,CACT,OAAO,kBAAC,OAAI,MAAO,CAAE,MAAO,MAAM,GAC9B,kBAAC,UAAI,OAAK,EAAE,yBAAyB,CAAE,EACvC,kBAAC,UACG,QAAQ,YACR,SAAU,CAAC,KAAK,MAAM,KAAK,OAC3B,QAAS,IAAM,KAAK,SAAS,GAE5B,OAAK,EAAE,gCAAgC,CAC5C,EACA,kBAAC,iBAAc,CAAC,UAAW,QAAO,MAAO,CAAE,MAAO,MAAO,GACrD,kBAAC,QAAK,CAAC,MAAO,CAAE,MAAO,MAAO,EAAG,KAAK,SAClC,kBAAC,YAAS,KACN,kBAAC,WAAQ,KACL,kBAAC,YAAS,IAAC,EACX,kBAAC,YAAS,KAAE,OAAK,EAAE,wBAAwB,CAAE,EAC7C,kBAAC,YAAS,KAAE,OAAK,EAAE,wBAAwB,CAAE,EAC7C,kBAAC,YAAS,KAAE,OAAK,EAAE,sBAAsB,CAAE,CAC/C,CACJ,EACA,kBAAC,YAAS,KACL,KAAK,MAAM,QAAQ,IAAIC,GAAU,kBAAC,YAC/B,IAAKA,EAAO,KACZ,GAAI,CAAE,mCAAoC,CAAE,OAAQ,CAAE,CAAE,EACxD,UAAW,KAAK,MAAM,KAAK,eAAiBA,EAAO,KAAO,KAAK,MAAM,QAAQ,SAAW,MAExF,kBAAC,YAAS,KACL,KAAK,MAAM,KAAK,eAAiBA,EAAO,MAAQA,EAAO,WAAa,WACjE,kBAAC,cACG,QAAS,IAAM,CACX,MAAMC,EAAO,KAAK,MAAM,KAAK,UAAU,KAAK,MAAM,IAAI,CAAC,EACvDA,EAAK,aAAeD,EAAO,KAC3B,KAAK,MAAM,SAASC,EAAMD,EAAO,IAAI,CACzC,GAEA,kBAAC,QAAK,IAAC,CACX,EAAgB,IACxB,EACA,kBAAC,YAAS,CAAC,UAAU,KAAK,MAAM,OAAOA,EAAO,IAAK,EACnD,kBAAC,YAAS,KAAEA,EAAO,QAAS,EAC5B,kBAAC,YAAS,KAAEA,EAAO,IAAK,CAC5B,CAAW,CACf,CACJ,CACJ,CACJ,CACJ,CACJ,CAEAJ,EAAoB,UAAY,CAC5B,OAAQ,WAAiB,WACzB,UAAW,WACX,UAAW,WACX,MAAO,WACP,UAAW,WACX,KAAM,WAAiB,WACvB,KAAM,WACN,OAAQ,WACR,QAAS,SACT,SAAU,QACd,EAEA,SAAe,cAAWF,CAAM,EAAEE,CAAmB,E,yUCpHrD,MAAM,EAASD,IAAU,CACrB,IAAK,CACD,gBAAiBA,EAAM,QAAQ,WAAW,QAC1C,MAAOA,EAAM,QAAQ,KAAK,QAC1B,OAAQ,MACZ,EACA,KAAM,CACF,QAAS,GACT,MAAO,GACX,CACJ,GAEA,MAAMO,UAAYC,EAAA,CAAW,CACzB,YAAYN,EAAO,CACf,MAAMO,EAAgB,KAAKP,CAAK,EAChC,MAAMA,EAAOO,CAAa,EAE1B,KAAK,MAAQ,CACT,KAAM,CAAE,kBAAmB,KAAM,EACjC,MAAO,KAAK,YAAY,CAC5B,EACA,MAAMC,EAAe,CACjB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,GAAI,EAAQ,KAAW,EACvB,QAAS,EAAQ,KAAc,CACnC,EAEA,UAAK,gBAAgBA,CAAY,EACjC,UAAK,aAAa,UAAU,UAAY,UAAU,cAAgB,MAAM,UAAU,EAAG,CAAC,EAAE,YAAY,CAAC,CACzG,CAEA,QAAS,CACL,OAAK,KAAK,MAAM,OAQT,kBAACC,EAAA,EAAoB,CAAC,YAAW,IACpC,kBAACC,EAAA,EAAa,CAAC,MAAO,KAAK,MAAM,OAC7B,kBAAC,OAAI,UAAW,KAAK,MAAM,QAAQ,KAC/B,kBAAC,OAAI,UAAW,KAAK,MAAM,QAAQ,MAC/B,kBAAC,GACG,OAAQ,KAAK,OACb,UAAW,KAAK,MAAM,UACtB,UAAW,KAAK,MAAM,UACtB,KAAK,oBACL,KAAM,KAAK,MAAM,KACjB,QAAS,IAAM,CAAC,EAChB,SAAU,EACV,OAAQ,CACJ,KAAM,2DACN,KAAM,QACV,EACA,SAAUN,GAAQ,CACd,KAAK,SAAS,CAAE,KAAAA,CAAK,CAAC,CAC1B,EACJ,CACJ,CACJ,CACJ,CACJ,EA9BW,kBAACK,EAAA,EAAoB,CAAC,YAAW,IACpC,kBAACC,EAAA,EAAa,CAAC,MAAO,KAAK,MAAM,OAC7B,kBAACC,EAAA,QAAM,CAAC,MAAO,KAAK,MAAM,UAAW,CACzC,CACJ,CA2BR,CACJ,CAEA,SAAeC,EAAA,GAAW,CAAM,EAAEP,CAAG,E,oVCrFrC,EAAeQ,GAAQ,CACnB,MAAMC,EAAS,UACTC,EAAU,UACVjB,EAAQ,QAAKkB,EAAA,SAAMH,CAAI,CAAC,EAC9B,OAAKf,IAGLA,EAAM,QAAQ,KAAK,OAAS,CACxB,MAAOgB,CACX,EACAhB,EAAM,QAAQ,KAAK,QAAU,CACzB,MAAOiB,CACX,EAEOjB,EACX,ECRA,OAAO,YAAc,6BACrB,IAAImB,EAAYC,EAAA,QAAM,aAAa,EAEnC,SAASC,GAAQ,CACb,MAAMC,EAAY,SAAS,eAAe,MAAM,EAEhD,SADa,KAAWA,CAAS,EACrB,OAAO,kBAAC,oBAChB,kBAACX,EAAA,EAAoB,CAAC,YAAW,IAC7B,kBAACC,EAAA,EAAa,CAAC,MAAOZ,EAAMmB,CAAS,GACjC,kBAAC,GACG,OAAQ,CAAC,KAAM,IAAI,EACnB,cAAgBI,GAAW,CACvBJ,EAAYI,EACZF,EAAM,CACV,EACJ,CACJ,CACJ,CACJ,CAAmB,CACvB,CAEAA,EAAM,C","sources":["PushbulletComponent.jsx","App.jsx","theme.js","bootstrap.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@mui/styles';\r\n\r\nimport {\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Button,\r\n    IconButton,\r\n} from '@mui/material';\r\nimport { Check } from '@mui/icons-material';\r\n// important to make from package and not from some children.\r\n// invalid\r\n// import ConfigGeneric from '@iobroker/adapter-react-v5/ConfigGeneric';\r\n// valid\r\nimport { ConfigGeneric, I18n } from '@iobroker/adapter-react-v5';\r\n\r\nconst styles = theme => ({\r\n    table: {\r\n        minWidth: 400\r\n    },\r\n    header: {\r\n        fontSize: 16,\r\n        fontWeight: 'bold',\r\n    },\r\n    selected: {\r\n        backgroundColor: theme.palette.mode === 'dark' ? '#006e23' : '#1ed25d',\r\n    },\r\n});\r\n\r\nclass PushbulletComponent extends ConfigGeneric {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            devices: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        super.componentDidMount();\r\n        if (this.props.data.apikey) {\r\n            this.readData();\r\n        }\r\n    }\r\n\r\n    readData() {\r\n        fetch(`https://api.pushbullet.com/v2/devices`, {\r\n            headers: {\r\n                Authorization: `Bearer ${this.props.data.apikey}`,\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                if (json.error) {\r\n                    window.alert(`Cannot read devices: ${json.error.message}`);\r\n                } else {\r\n                    this.setState({ devices: json.devices || [] });\r\n                }\r\n            })\r\n            .catch(e => window.alert(`Cannot read devices: ${e}`));\r\n    }\r\n\r\n    renderItem() {\r\n        return <div style={{ width: '100%'}}>\r\n            <h4>{I18n.t('custom_pushbullet_title')}</h4>\r\n            <Button\r\n                variant=\"contained\"\r\n                disabled={!this.props.data.apikey}\r\n                onClick={() => this.readData()}\r\n            >\r\n                {I18n.t('custom_pushbullet_read_devices')}\r\n            </Button>\r\n            <TableContainer component={Paper} style={{ width: '100%' }}>\r\n                <Table style={{ width: '100%' }} size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell></TableCell>\r\n                            <TableCell>{I18n.t('custom_pushbullet_name')}</TableCell>\r\n                            <TableCell>{I18n.t('custom_pushbullet_type')}</TableCell>\r\n                            <TableCell>{I18n.t('custom_pushbullet_id')}</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {this.state.devices.map(device => <TableRow\r\n                            key={device.iden}\r\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n                            className={this.props.data.receivermail === device.iden ? this.props.classes.selected : null}\r\n                        >\r\n                            <TableCell>\r\n                                {this.props.data.receivermail !== device.iden && device.nickname !== 'ioBroker' ?\r\n                                    <IconButton\r\n                                        onClick={() => {\r\n                                            const data = JSON.parse(JSON.stringify(this.props.data));\r\n                                            data.receivermail = device.iden;\r\n                                            this.props.onChange(data, device.iden)\r\n                                        }}\r\n                                    >\r\n                                        <Check />\r\n                                    </IconButton> : null}\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">{device.type}</TableCell>\r\n                            <TableCell>{device.nickname}</TableCell>\r\n                            <TableCell>{device.iden}</TableCell>\r\n                        </TableRow>)}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>;\r\n    }\r\n}\r\n\r\nPushbulletComponent.propTypes = {\r\n    socket: PropTypes.object.isRequired,\r\n    themeType: PropTypes.string,\r\n    themeName: PropTypes.string,\r\n    style: PropTypes.object,\r\n    className: PropTypes.string,\r\n    data: PropTypes.object.isRequired,\r\n    attr: PropTypes.string,\r\n    schema: PropTypes.object,\r\n    onError: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default withStyles(styles)(PushbulletComponent);","// this file used only for simulation and not used in end build\r\n\r\nimport React from 'react';\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\r\n\r\nimport withStyles from '@mui/styles/withStyles';\r\n\r\nimport GenericApp from '@iobroker/adapter-react-v5/GenericApp';\r\nimport I18n from '@iobroker/adapter-react-v5/i18n';\r\nimport Loader from '@iobroker/adapter-react-v5/Components/Loader';\r\n\r\nimport PushbulletComponent from './PushbulletComponent';\r\n\r\nconst styles = theme => ({\r\n    app: {\r\n        backgroundColor: theme.palette.background.default,\r\n        color: theme.palette.text.primary,\r\n        height: '100%',\r\n    },\r\n    item: {\r\n        padding: 50,\r\n        width: 400\r\n    }\r\n});\r\n\r\nclass App extends GenericApp {\r\n    constructor(props) {\r\n        const extendedProps = { ...props };\r\n        super(props, extendedProps);\r\n\r\n        this.state = {\r\n            data: { myCustomAttribute: 'red' },\r\n            theme: this.createTheme(),\r\n        };\r\n        const translations = {\r\n            en: require('./i18n/en'),\r\n            de: require('./i18n/de'),\r\n            ru: require('./i18n/ru'),\r\n            pt: require('./i18n/pt'),\r\n            nl: require('./i18n/nl'),\r\n            fr: require('./i18n/fr'),\r\n            it: require('./i18n/it'),\r\n            es: require('./i18n/es'),\r\n            pl: require('./i18n/pl'),\r\n            uk: require('./i18n/uk'),\r\n            'zh-cn': require('./i18n/zh-cn'),\r\n        };\r\n\r\n        I18n.setTranslations(translations);\r\n        I18n.setLanguage((navigator.language || navigator.userLanguage || 'en').substring(0, 2).toLowerCase());\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.loaded) {\r\n            return <StyledEngineProvider injectFirst>\r\n                <ThemeProvider theme={this.state.theme}>\r\n                    <Loader theme={this.state.themeType} />\r\n                </ThemeProvider>\r\n            </StyledEngineProvider>;\r\n        }\r\n\r\n        return <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={this.state.theme}>\r\n                <div className={this.props.classes.app}>\r\n                    <div className={this.props.classes.item}>\r\n                        <PushbulletComponent\r\n                            socket={this.socket}\r\n                            themeType={this.state.themeType}\r\n                            themeName={this.state.themeName}\r\n                            attr='myCustomAttribute'\r\n                            data={this.state.data}\r\n                            onError={() => {}}\r\n                            instance={0}\r\n                            schema={{\r\n                                name: 'ConfigCustomPushbulletSet/Components/PushbulletComponent',\r\n                                type: 'custom',\r\n                            }}\r\n                            onChange={data => {\r\n                                this.setState({ data });\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>;\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(App);","// this file used only for simulation and not used in end build\r\nimport Theme from '@iobroker/adapter-react-v5/Theme';\r\n\r\nexport default type => {\r\n    const danger = '#dd5325';\r\n    const success = '#73b6a8';\r\n    const theme = { ...Theme(type) };\r\n    if (!theme) {\r\n        return theme;\r\n    }\r\n    theme.palette.text.danger = {\r\n        color: danger,\r\n    };\r\n    theme.palette.text.success = {\r\n        color: success,\r\n    };\r\n\r\n    return theme;\r\n};","// this file used only for simulation and not used in end build\r\n\r\n/* eslint-disable */\r\nimport React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { ThemeProvider, StyledEngineProvider } from '@mui/material/styles';\r\nimport Utils from '@iobroker/adapter-react-v5/Components/Utils';\r\nimport App from './App';\r\nimport theme from './theme';\r\n\r\nwindow.adapterName = 'adapter-component-template';\r\nlet themeName = Utils.getThemeName();\r\n\r\nfunction build() {\r\n    const container = document.getElementById('root');\r\n    const root = createRoot(container);\r\n    return root.render(<React.StrictMode>\r\n        <StyledEngineProvider injectFirst>\r\n            <ThemeProvider theme={theme(themeName)}>\r\n                <App\r\n                    socket={{port: 8081}}\r\n                    onThemeChange={(_theme) => {\r\n                        themeName = _theme;\r\n                        build();\r\n                    }}\r\n                />\r\n            </ThemeProvider>\r\n        </StyledEngineProvider>\r\n    </React.StrictMode>);\r\n}\r\n\r\nbuild();"],"names":["styles","theme","PushbulletComponent","props","res","json","device","data","App","GenericApp","extendedProps","translations","StyledEngineProvider","ThemeProvider","Loader","withStyles","type","danger","success","Theme","themeName","Utils","build","container","_theme"],"sourceRoot":""}